<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WenHuiZhou</title>
  
  <subtitle>perper（打起精神！）</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wenhui-zhou.github.io/"/>
  <updated>2020-04-03T10:44:40.558Z</updated>
  <id>https://wenhui-zhou.github.io/</id>
  
  <author>
    <name>WenHuiZhou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>problem summary</title>
    <link href="https://wenhui-zhou.github.io/2020/03/25/problem-summary/"/>
    <id>https://wenhui-zhou.github.io/2020/03/25/problem-summary/</id>
    <published>2020-03-25T03:51:28.000Z</published>
    <updated>2020-04-03T10:44:40.558Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="welcome to my blog,enter password to read." />    <label for="pass">welcome to my blog,enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      welcome to my blog,enter password to read.
    
    </summary>
    
      <category term="面试准备" scheme="https://wenhui-zhou.github.io/categories/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/"/>
    
    
  </entry>
  
  <entry>
    <title>RDSNet</title>
    <link href="https://wenhui-zhou.github.io/2020/03/18/RDSNet/"/>
    <id>https://wenhui-zhou.github.io/2020/03/18/RDSNet/</id>
    <published>2020-03-18T02:53:57.000Z</published>
    <updated>2020-03-30T06:05:32.183Z</updated>
    
    <content type="html"><![CDATA[<p>RDSNet的一个亮点在于同一个网络同时学习目标检测和目标分割，这两个任务相互促进提升模型精度。RDSNet提出了双流结构，分别取学习目标尺度和像素尺度上的物体。同时两条流上的信息相互融合，相互促进各自的训练。object level为pixel level提供了实例信息，为pixel提供一些分割上的先验。pixel level为object level重新定义边框的定位，提升精度。</p><p>在这个结构中，来自两个流的信息是交替融合，即对象层的信息引入实例意识和翻译差异到像素级，像素级的信息-在对象级别细化对象的定位精度作为回报</p><a id="more"></a><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><strong>目标识别</strong>上，找出一个tight bounding box是非常具有挑战的，即要么无法全部选中目标，要么bounding 太大选中过多。</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/image-20200318110910599.png" alt="image-20200318110910599" style="zoom:40%;"></p><p>一个主要的原因是我们在做边框回归的时候，由于逐点回归并不能直接感知整个对象，因此将这个问题转化为pixel wise更加合理，即根绝mask的大小，找到一个最小的包围盒。</p><p><strong>实例分割</strong>的目的是进一步预测除类别外的每个对象的每像素二值掩码。核心思想是：实例分割时，像素类别是具有实例感知的。如在MASK-RCNN中，mask是根据网络提取出来的单独的proposal来生成的，因此具有整个对象的感知。但是这种方法必须依赖于目标检测的结果。</p><p>通过上面的分析，这里两种任务时能够相互促进的，因此作者提出了RDSNet，一种互惠的目标检测方法和实例分割网络（RDSNet）来利用这两项任务之间的关系。</p><p>RDSNet利用双流结构，即对象流和像素流，同时这两条流的信息相互融合，具体来说，对象流集中在对象级别特征是一个回归的检测器，而像素流关注像素级特征，结构沿用FCN的结构，以保证高分辨率输出。</p><p>为了利用来自对象流的对象级提示，提出了<strong>一个相关模块和一个裁剪模块</strong>，该模块将实例感知和翻译方差特性引入到像素流，并产生实例感知的分割掩码。然后，提出了一种基于掩模的边界求精模块，以减小定位误差像素流，即基于实例掩码生成更精确的边界框。</p><p>RDSNet充分考虑了目标检测和实例分割任务之间的相互关系.与以往的方法相比，它有以下三个优点：1）由RDSNet生成的掩码对不同尺度的对象具有一致的高分辨率；2）由于具有巧妙的裁剪模块，掩码对检测结果的依赖性较小；3）更准确和更准确；更紧密的包围盒是用一种新的像素级公式得到的对象包围盒位置。</p><h3 id="网络结构"><a href="#网络结构" class="headerlink" title="网络结构"></a>网络结构</h3><p><img src="/Users/zhouwenhui/blog/source/images/nlp/image-20200318114954524.png" alt="image-20200318114954524" style="zoom:50%;"></p><h4 id="双流结构"><a href="#双流结构" class="headerlink" title="双流结构"></a>双流结构</h4><p>RDSNet的核心是双流结构，即对象流和像素流。这两条流共用相同的FPN（Lin等人.2017a）主干，然后为每个相应的任务分离。这种平行结构支持对象级和像素级信息的分离以及不同任务的可变分辨率。</p><p><strong>对象流</strong>。对象流侧重于对象级信息，包括对象类别，位置等。可有各种回归的检测器充当（Liu等）。此外，我们还添加了一个与分类和回归分支并行的新分支，以提取每个锚点（或位置）的对象特征。这条流负责产生检测结果，稍后将由像素级信息进一步提取信息（见SEC.3.3）。</p><p><strong>像素流</strong>。像素流的重点是像素级信息，并遵循FCN（2015）的高分辨率输出设计。具体来说，每像素特征是在这个流中提取的，并且用于通过使用对象级信息生成实例掩码（参见SEC.3.2）。</p><p><strong>对象感知：相关性模块</strong></p><p>主要思路是将实例信息融合到像素上来，以便做分割处理：<br>$$<br>M_{o}=\operatorname{softmax}\left(\Psi(U) \star \phi\left(v_{o}\right)\right)<br>$$<br>其中 $v_0$ 表示从obejct stream上的特征，U表示来着像素流的特征，将两个特征映射之后，做一个卷积操作，然后在M0上计算一个pixelwise的交叉熵损失，作为最后loss的一部分。</p><p>其中U的维度为1xdxhxw，v的维度为2xdx1x1，其中2表示当前像素是属于前景还是背景。因此U与v做完卷积之后，得到的维度是2x1xwxh，即每一个位置上有两个值，表示前景和背景的概率。每一个anchor对应一个v，与U做完卷积之后计算softmax得到一个二值图。因此可以发现，网络检测出多少anchor，最终segmentation的时候，就会输出多少张二值图，理论上每一个二值图表示一个对象。</p><p>2xkxdx1x1 representation即表示anchor对象的深层含义。</p><p><strong>翻译改变到翻译不变</strong></p><p>由于上诉相关模块对每一个object生成的mask覆盖了整个图像，由于卷积操作产生了大量的噪声。我们使用一个裁剪模块来克服这个问题。可以利用物体的边框进行裁剪，边框以外的像素设置成背景，但是这种做法又会受到检测结果的影响，因此我们选择裁剪进过扩展后的边框，保证mask对box的依赖比较小。同时扩展后的边框引入了更多的背景，使得背景也容易被区分出来。需要注意的是，我们引入背景的时候也需要保持正负样本的平衡（1:1），可以使用背景像素的OHEM算法。</p><h4 id="由mask得到精确边框"><a href="#由mask得到精确边框" class="headerlink" title="由mask得到精确边框"></a>由mask得到精确边框</h4><p>利用从对象流和像素流中获得的边界框和实例掩码，得到每个对象的更精确的边界框。虽然回归边界框可能包含定位错误，但我们认为它们在一定程度上仍然为对象边界位置提供了合理的先验。因此，我们的提法联合擦除检测和分割结果。</p><h3 id="网络损失函数"><a href="#网络损失函数" class="headerlink" title="网络损失函数"></a>网络损失函数</h3><p>最终的loss：<br>$$<br>L=L_{c l s}+\lambda_{r} L_{r e g}+\lambda_{m} L_{m a s k}<br>$$<br>即分类损失，边框回归损失，相关模块产生的mask损失。</p><h3 id="代码阅读"><a href="#代码阅读" class="headerlink" title="代码阅读"></a>代码阅读</h3><p><strong>数据的组织形式</strong></p><p>GT中segmentation部分采用coco的标注格式，即ploygon多边形的轮廓坐标[x1,y1,x2,y2,x3,y3…]。</p><p>box部分则表明GT中的目标所在的外包围盒。</p><p><strong>dataset部分：</strong> 数据输出为[img, gt_bboxes, gt_labels, gt_masks]</p><p>代码结构：</p><ul><li>backbone: usually an FCN network to extract feature maps, e.g., ResNet, MobileNet.</li><li>neck: the component between backbones and heads, e.g., FPN, PAFPN.</li><li>head: the component for specific tasks, e.g., bbox prediction and mask prediction.</li><li>roi extractor: the part for extracting RoI features from feature maps, e.g., RoI Align.</li></ul><h3 id="评价指标"><a href="#评价指标" class="headerlink" title="评价指标"></a>评价指标</h3><p>IoU：即预测的mask与GT的重叠程度<br>$$<br>I O U(A, B)=\frac{|A \cap B|}{|A \cup B|}<br>$$<br>dice：与IoU相似，也是用来评价与GT的重叠程度：<br>$$<br>\operatorname{dice}(A, B)=\frac{2|A \cap B|}{|A|+|B|}<br>$$<br>相同的结果比值上，dice的值要比IoU稍微大一点。</p><p>COCO数据集的验证方式得到的结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.397</span><br><span class="line">Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.603</span><br><span class="line">Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.499</span><br><span class="line">Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.034</span><br><span class="line">Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.463</span><br><span class="line">Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000</span><br><span class="line">Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.443</span><br><span class="line">Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.465</span><br><span class="line">Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.467</span><br><span class="line">Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.135</span><br><span class="line">Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.501</span><br><span class="line">Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000</span><br></pre></td></tr></table></figure><p>其中IoU表示阈值，用于区分正负样本，然后计算precision和recall，得到的结果如上。</p><p>下面是各个模型的指标，可以作为一个baseline，可以说明效果不错。</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/image-20200320153558364.png" alt="image-20200320153558364" style="zoom:50%;"></p><p>但是这个结果仅仅只是检测的结果，过于segmentation部分的结果并没有。</p><p>这个需要我自己去写一个。</p><p>对于segmentation的指标有：</p><p><strong>pa：</strong> 是标记正确的像素占总像素的比例</p><p><strong>mpa：</strong>每个类别被正确分类像素的比例，之后求所有类的平均</p><p><strong>mIU：</strong>在每个类上求IoU，再求平均</p><p><strong>fwIU：</strong>根据每个类出现的频率为其设置权重，再算IoU</p><p><strong>FCN模型的检测结果如下，可以做为一个baseline</strong></p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/image-20200320152311238.png" alt="image-20200320152311238" style="zoom:50%;"></p><p>验证集574张图片，能够检测出人的图像有：384张</p><p>验证后指标分别如下：</p><p>pa: 0.9326967388628634</p><p>person pa: 0.948784433562702; ski pa 0.7863983575482737</p><p>person mIU: 0.8811813306596593; ski mIU 0.47062399967040647</p><p><strong>人体倒立的效果不好：</strong></p><p>目前有的数据增强操作有：resize：[(1333, 640), (1333, 800)]，randomFilp（左右翻转），Normalize，Pad</p><p>增加上下翻转的操作，同时翻转mask和box:</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RDSNet的一个亮点在于同一个网络同时学习目标检测和目标分割，这两个任务相互促进提升模型精度。RDSNet提出了双流结构，分别取学习目标尺度和像素尺度上的物体。同时两条流上的信息相互融合，相互促进各自的训练。object level为pixel level提供了实例信息，为pixel提供一些分割上的先验。pixel level为object level重新定义边框的定位，提升精度。&lt;/p&gt;
&lt;p&gt;在这个结构中，来自两个流的信息是交替融合，即对象层的信息引入实例意识和翻译差异到像素级，像素级的信息-在对象级别细化对象的定位精度作为回报&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="https://wenhui-zhou.github.io/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>LR 推导</title>
    <link href="https://wenhui-zhou.github.io/2020/03/14/LR-%E6%8E%A8%E5%AF%BC/"/>
    <id>https://wenhui-zhou.github.io/2020/03/14/LR-推导/</id>
    <published>2020-03-14T15:57:51.000Z</published>
    <updated>2020-03-14T16:42:48.396Z</updated>
    
    <content type="html"><![CDATA[<p>逻辑斯蒂回归是一种二分类模型，使用sigmoid函数判别函数，下面将详细讲一下逻辑回归的原理。</p><a id="more"></a><h3 id="逻辑回归函数"><a href="#逻辑回归函数" class="headerlink" title="逻辑回归函数"></a>逻辑回归函数</h3><ul><li>逻辑回归需要满足伯努利二次分布，即$h(\theta)$ 为正样本的概率，那么$1-h(\theta)$ 为负样本的概率。</li><li>样本分布相互独立，即求所有样本出现的概率可以通过连乘的形式得到。</li></ul><p><strong>sigmoid函数</strong><br>$$<br>h(\theta) = \frac{e^{wx}}{1+e^{wx}}<br>$$<br><strong>逻辑回归的损失函数：</strong></p><p>在一个二分类的数据中，一个事件发生的概率为：<br>$$<br>P(y | \boldsymbol{x})=\left{\begin{aligned} p, y &amp;=1 \ 1-p, y &amp;=0 \end{aligned}\right.<br>$$<br>为了方便计算将上式写成：<br>$$<br>P\left(y_{i} | \boldsymbol{x}_{i}\right)=p^{y_{i}}(1-p)^{1-y_{i}}<br>$$<br>当我们采集到一组数据，由于数据分布是相互独立的，因此联合的概率可以写成：<br>$$<br>\begin{aligned} P_{\breve{E}} &amp;=P\left(y_{1} | \boldsymbol{x}_{1}\right) P\left(y_{2} | \boldsymbol{x}_{2}\right) P\left(y_{3} | \boldsymbol{x}_{3}\right) \dots P\left(y_{N} | \boldsymbol{x}_{N}\right) \ &amp;=\prod_{n=1}^{N} p^{y_{n}}(1-p)^{1-y_{n}} \end{aligned}<br>$$<br>为了简化上面的式子，而不失去函数单调性，我们对函数取对数，得到：<br>$$<br>\begin{aligned} F(\boldsymbol{w})=\ln \left(P_{\breve{\mathbf{E}} \mathbf{h}}\right) &amp;=\ln \left(\prod_{n=1}^{N} p^{y_{n}}(1-p)^{1-y_{n}}\right) \ &amp;=\sum_{n=1}^{N} \ln \left(p^{y_{n}}(1-p)^{1-y_{n}}\right) \ &amp;=\sum_{n=1}^{N}\left(y_{n} \ln (p)+\left(1-y_{n}\right) \ln (1-p)\right) \end{aligned}<br>$$<br>其中p为sigmoid函数，可以发现上面实质加上负号就变成了交叉熵。</p><p><strong>逻辑回归函数的求导</strong></p><p>对于sigmoid函数，我们的求导如下：<br>$$<br>\begin{aligned} p^{\prime}=f^{\prime}(\boldsymbol{w}) &amp;=\left(\frac{1}{1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}}\right)^{\prime} \ &amp;=-\frac{1}{\left(1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}\right)^{2}} \cdot\left(1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}\right)^{\prime} \ &amp;=-\frac{1}{\left(1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}\right)^{2}} \cdot e^{-\boldsymbol{w}^{T} \boldsymbol{x}} \cdot\left(-\boldsymbol{w}^{T} \boldsymbol{x}\right)^{\prime} \ &amp;=-\frac{1}{\left(1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}\right)^{2}} \cdot e^{-\boldsymbol{w}^{T} \boldsymbol{x}} \cdot(-\boldsymbol{x}) \ &amp;=\frac{e^{-\boldsymbol{w}^{T} \boldsymbol{x}}}{\left(1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}\right)^{2}} \cdot \boldsymbol{x} \ &amp;=\frac{1}{1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}} \cdot \frac{e^{-\boldsymbol{w}^{T} \boldsymbol{x}}}{1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}} \cdot \boldsymbol{x} \ &amp;=p(1-p) \boldsymbol{x} \end{aligned}<br>$$<br>接下来对逻辑回归函数进行求导(求函数的最大似然)：<br>$$<br>\begin{aligned} \nabla F(\boldsymbol{w}) &amp;=\nabla\left(\sum_{n=1}^{N}\left(y_{n} \ln (p)+\left(1-y_{n}\right) \ln (1-p)\right)\right) \ &amp;=\sum\left(y_{n} \ln ^{\prime}(p)+\left(1-y_{n}\right) \ln ^{\prime}(1-p)\right) \ &amp;=\sum\left(\left(y_{n} \frac{1}{p} p^{\prime}\right)+\left(1-y_{n}\right) \frac{1}{1-p}(1-p)^{\prime}\right) \ &amp;=\sum_{n=1}\left(y_{n}(1-p) \boldsymbol{x}_{n}-\left(1-y_{n}\right) p \boldsymbol{x}_{n}\right) \ &amp;=\sum_{n=1}^{N}\left(y_{n}-p\right) \boldsymbol{x}_{n} \end{aligned}<br>$$<br><strong>SGD</strong></p><p>对参数进行更新，得到：<br>$$<br>\boldsymbol{w}_{t+1}=\boldsymbol{w}_{t}+\eta \nabla F(\boldsymbol{w})<br>$$</p><p>$$<br>\boldsymbol{w}_{t+1}= \boldsymbol{w}_{t} + \eta \sum_{n=1}^{N}\left(y_{n}-p\right) \boldsymbol{x}_{n}<br>$$</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;逻辑斯蒂回归是一种二分类模型，使用sigmoid函数判别函数，下面将详细讲一下逻辑回归的原理。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://wenhui-zhou.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>TrackIn:BERT five-classification on MSMARCO.md</title>
    <link href="https://wenhui-zhou.github.io/2020/03/12/TrackIn-BERT/"/>
    <id>https://wenhui-zhou.github.io/2020/03/12/TrackIn-BERT/</id>
    <published>2020-03-12T12:54:09.000Z</published>
    <updated>2020-03-30T13:21:33.538Z</updated>
    
    <content type="html"><![CDATA[<p>这篇post主要构建一个BERT的五分类模型，然后研究使用TrackIn来确定样本在模型训练中，对模型inference的影响。</p><a id="more"></a><h3 id="MS-MARCO"><a href="#MS-MARCO" class="headerlink" title="MS MARCO"></a>MS MARCO</h3><p>MS MARCO是微软发布的一个NLP问答数据集，里头含有100000个真实的在bing上提出的问题，以及问题的答案，可作为QnA问题的数据集，此后还陆续提出了多种问题的数据集。</p><p>格式的介绍在这里：<a href="https://microsoft.github.io/MSMARCO-Passage-Ranking/" target="_blank" rel="noopener">https://microsoft.github.io/MSMARCO-Passage-Ranking/</a></p><p>MARCO数据集中，比较重要的文件有：</p><ul><li><p><strong>triples.train.small.tsv</strong>，他的文件格式为:&lt;query,doc1,doc2&gt;，第一个doc1是positive，第二个doc2是negative。</p></li><li><p><strong>top1000.dev.tsv：</strong>&lt;query_id ,doc_id,query,doc&gt;，即query和doc对</p></li><li><strong>qrels.dev.small.tsv</strong>：&lt;query_id,0,doc_id,1&gt;，用来判断query和doc是否是相互关联的。</li></ul><p>triples.train.small.tsv中query是重复的。</p><h3 id="STSB数据集"><a href="#STSB数据集" class="headerlink" title="STSB数据集"></a>STSB数据集</h3><p>用1到5的分数来表征两个句子的语义相似性，本质上是一个回归问题，但依然可以用分类的方法做，因此可以归类为句子对的文本五分类任务。</p><p>数据集的格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">indexgenrefilenameyearold_indexsource1source2sentence1sentence2score</span><br></pre></td></tr></table></figure><p>其中我们用到的数据是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sentence1sentence2score</span><br><span class="line">A plane is taking off.An air plane is taking off.5.000</span><br></pre></td></tr></table></figure><p>数据首先经过wordembedding，每个词变成长度为768的向量，每个句子通过pad_sequence变成长度为512，因此输出为【512 x 768】随后将【512 x 768】加上position embedding输入BERT模型中。</p><h3 id="dataloader部分"><a href="#dataloader部分" class="headerlink" title="dataloader部分"></a>dataloader部分</h3><p>使用一个数据存储数据，格式为&lt;query,doc,label&gt;,然后将数组存储为dataloader。其中label = 0 表示负类，label = 1 表示你正类。</p><p>其具体的实现过程如下：</p><p>首先将数据query与doc分别经过tokenizer分词化，然后组成一个输入:</p><p>[CLS] + tokens_query + [SEP] + tokens_doc + [SEP]</p><p>随后将分词转换为vocab中的word id，构建一个segments_tensor，长度与输入长度相同，其中query部分为0，doc部分为1。如果我们希望返回一个batch，需要将所有的tensor通过前面填充0 的方式，将tensor维度变成一直（pad_sequence）,同时构建一个mask，mask的维度与batch的维度相同，其中用零填充的部分为0，不是0填充的部分为1。</p><p>最终dataloader将返回：</p><p>&lt;tokens_tensors, masks_tensors,segments_tensors,  labels_ids&gt; </p><p>tensor的维度为：tokens_tensor为：32x128</p><h3 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h3><p>模型使用<code>transformers.BertForSequenceClassification</code></p><p>该模型的网络结构如下：</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/image-20200314021335605.png" alt="image-20200314021335605" style="zoom:50%;"></p><p>即BERT的基础上加上一层全连接层，全链接层输入为768，输出为label class的个数，最后通过一个交叉熵得出最后的loss。</p><h3 id="STSB评价指标"><a href="#STSB评价指标" class="headerlink" title="STSB评价指标"></a>STSB评价指标</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pearson_and_spearman</span><span class="params">(preds, labels)</span>:</span></span><br><span class="line">        pearson_corr = pearsonr(preds, labels)[<span class="number">0</span>]</span><br><span class="line">        spearman_corr = spearmanr(preds, labels)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">"pearson"</span>: pearson_corr,</span><br><span class="line">            <span class="string">"spearmanr"</span>: spearman_corr,</span><br><span class="line">            <span class="string">"corr"</span>: (pearson_corr + spearman_corr) / <span class="number">2</span>,</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>pearson:</strong>是衡量向量相似度的一种方法。输出范围为-1到+1, 0代表无相关性，负值为负相关，正值为正相关。<br>$$<br>\rho(X, Y)=\frac{E\left[\left(X-\mu_{X}\right)\left(Y-\mu_{Y}\right)\right]}{\sigma_{X} \sigma_{Y}}=\frac{E\left[\left(X-\mu_{X}\right)\left(Y-\mu_{Y}\right)\right]}{\sqrt{\sum_{i=1}^{n}\left(X_{i}-\mu_{X}\right)^{2}} \sqrt{\sum_{i=1}^{n}\left(Y_{i}-\mu_{Y}\right)^{2}}}<br>$$<br>相关系数 0.8-1.0 极强相关</p><p>0.6-0.8 强相关</p><p>0.4-0.6 中等程度相关</p><p>0.2-0.4 弱相关</p><p>0.0-0.2 极弱相关或无相关</p><p><strong>spearmanr</strong>：斯皮尔曼相关系数表明X(独立变量)和Y(依赖变量)的相关方向：<br>$$<br>\rho=\frac{\sum_{i}\left(x_{i}-\bar{x}\right)\left(y_{i}-\bar{y}\right)}{\sqrt{\sum_{i}\left(x_{i}-\bar{x}\right)^{2} \sum_{i}\left(y_{i}-\bar{y}\right)^{2}}}<br>$$</p><h3 id="trackIn-理解"><a href="#trackIn-理解" class="headerlink" title="trackIn 理解"></a>trackIn 理解</h3><p>TrackIn核心的观点在于model经过当前样本训练迭代后，更新参数得到的新模型在验证集上loss与未更新前下降的数值之差。</p><p><strong>样本影响力</strong>的定义如下（z为指定的样本，z’为验证集）：</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/clip_image001.png" alt="img" style="zoom:50%;"></p><p>理想状态：即在某次迭代，能够指定一个训练样本。</p><p>在理想状态下，所有训练数据对验证集样本的影响如下：</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/clip_image002.png" alt="img" style="zoom:50%;"></p><p><strong>上述公式，默认条件是每次迭代仅在一个训练样本上进行训练。</strong></p><p>作者使用一阶近似来估计迭代t中，测试示例的损失变化：</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/clip_image003.png" alt="img" style="zoom:50%;"></p><p>其中梯度的计算是在验证集数据上的。</p><p>SGD梯度下降法计算参数迭代如下：</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/clip_image004.png" alt="img" style="zoom:50%;"></p><p>将两个公式结合，忽略高阶项得到：</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/clip_image005.png" alt="img" style="zoom:50%;"></p><p>因此我们固定一个样本z，可以算出利用z的所有迭代次数的影响力之和：</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/clip_image006.png" alt="img" style="zoom:50%;"></p><p>当我们训练数据不是一个样本，而是一个batch的时候：</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/clip_image007.png" alt="img" style="zoom:50%;"></p><p>作者在实际的应用中，在每次迭代仅使用单个样本，保存学习率不变，模型每次在训练集上训练一次后保存一个检查点checkpoint，因此两个checkpoint之间样本仅训练过一次。作者利用检查点的参数，作为近似参数向量：</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/clip_image008.png" alt="img" style="zoom:50%;"></p><p>上式的含义是模型参数wt 到wt+1之间，样本z对验证集的影响。通过对这个影响是positive或negative的判断，得到样本对模型的影响力，一个应用就是用来判断是否存在样本误标注的问题。</p><p>作者论文中给出一个NLP例子是文本分类问题，证明这种方法也是可以用在NLP中的。 </p><h3 id="trackIn的一点尝试"><a href="#trackIn的一点尝试" class="headerlink" title="trackIn的一点尝试"></a>trackIn的一点尝试</h3><ol><li><p>使用STS-B数据集：五分类数据集，数据示例如下：</p><p> sentence1 sentence2 similar_score（0-4）<br> A plane is taking off.    An air plane is taking off.    4<br> A man is playing a large flute.    A man is playing a flute.    3<br> A man is smoking.    A man is skating.    0</p></li><li><p>使用huggingface中的BertForSequenceClassification类，调整网络的输出为五分类，该网络的结构为：<br> Bert + dropout + linear（768x5）+ corssentropy</p></li><li><p>原始版本训练10个epoch后，得到了检测的指标指标：<br> corr = 0.8668199467352331<br> pearson = 0.8680211975793752<br> spearmanr = 0.865618695891091<br> 这个成绩在glue排行版上top20左右，top10以上基本你上90分。</p></li><li><p>fix BERT部分参数，仅训练linear层，10个epoch之后的指标为：<br> corr = 0.46851795469199176<br> pearson = 0.4883897702565989<br> spearmanr = 0.44864613912738466</p></li><li><p>由于Bert后的分类结构过于简单，因此在原始网络后面添加linear层。fix bert部分，训练得到结果：<br> Bert + linear（768x100） + linear(100x5) + crossentropy<br> corr = 0.4874025699052884<br> pearson = 0.48976918410773407<br> spearmanr = 0.4850359557028428</p></li><li><p>bert + linear(768,300) + linear(300,50) + linear(50,5):<br> corr = 0.4901503255725512<br> pearson = 0.49249477605462705<br> spearmanr = 0.48780587509047535</p></li><li><p>Bert + linear(768,300) + linear(300,100) + linear(100,50) + linear(50,5) </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">corr = 0.5010257366795687</span><br><span class="line">pearson = 0.5034574745457592</span><br><span class="line">spearmanr = 0.49859399881337824</span><br></pre></td></tr></table></figure></li><li><p>训练bert最后一层以及linear层得到的结果：<br>bert + linear(768,300) + linear(300,100) + linear(100,50) + linear(50,5)</p><p> corr = 0.7648302644703243<br> pearson = 0.7663893373697331<br> spearmanr = 0.7632711915709155</p></li></ol><p>pearson:输出范围为-1到+1, 0代表无相关性，负值为负相关，正值为正相关。<br>相关系数 0.8-1.0 极强相关<br>0.6-0.8 强相关<br>0.4-0.6 中等程度相关<br>0.2-0.4 弱相关<br>0.0-0.2 极弱相关或无相关</p><h3 id="分析trackIn函数"><a href="#分析trackIn函数" class="headerlink" title="分析trackIn函数"></a>分析trackIn函数</h3><p>$$<br>\operatorname{TrackIn}\left(z, z^{\prime}\right)=\sum_{t: z_{t}=z} \eta_{t} \nabla \ell\left(w_{t}, z^{\prime}\right) \cdot \nabla \ell\left(w_{t}, z\right)<br>$$</p><p>如上，作者经过一些推导之后得到TrackIn的表达式，表达式表明，在第t步迭代的时候，训练样本z 对 待测试样本$z^`$ 的影响的计算方法是： 待测样本在$w_t$上的梯度与训练样本在$w_t$上的梯度的乘积。</p><p>这时候有一个问题，就是$w_t$是一个矩阵，而TrackIn是loss的差，是一个标量，我的想法是矩阵对应位置相乘后相加，得到最后的结果。可以把t次数调大一点，使得效果能够明显一点。</p><p>因此思路如下：</p><ol><li>将训练样本和测试样本输入网络，然后将Bert最后一层以及classifier层的梯度拿出来</li><li>计算梯度相乘，然后求和得到trackIn的值</li><li>记录一个表，表中的内容是target example 和 对应的一些列 train example，然后每个train example有一个trackIn的值。</li></ol><p>因此要做的事情是：</p><ol><li>重新设计数据集，dataset，dataloader</li><li>对训练数据和测试数据迭代t次网络，然后将每次的梯度记到txt中</li><li>写一个矩阵相乘的代码，得到trackIn的值</li></ol><p>明天做！</p><p>测试数据：</p><p>aa: A plane is taking off.    An air plane is taking off.    5.000  </p><p>trackIn训练数据（假样本对数据的影响）：</p><p>b1: A plane is taking off.    A man wearing a hard hat is dancing.    5.000   :11326.170552326665</p><p>b2: A plane is taking off.    The plane is about to take off.     5.0 done         :11326.172044273939</p><p>b3: A plane is taking off.    Spaceship is about to take off.     3.0 done         :11326.17223393679</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇post主要构建一个BERT的五分类模型，然后研究使用TrackIn来确定样本在模型训练中，对模型inference的影响。&lt;/p&gt;
    
    </summary>
    
      <category term="NLP" scheme="https://wenhui-zhou.github.io/categories/NLP/"/>
    
    
  </entry>
  
  <entry>
    <title>Bert，XLNet，UNILM，RoBERTa以及QA</title>
    <link href="https://wenhui-zhou.github.io/2020/03/10/Bert%EF%BC%8CXLNet%EF%BC%8CUNILM%EF%BC%8CRoBERTa%E4%BB%A5%E5%8F%8AQA/"/>
    <id>https://wenhui-zhou.github.io/2020/03/10/Bert，XLNet，UNILM，RoBERTa以及QA/</id>
    <published>2020-03-10T15:04:42.000Z</published>
    <updated>2020-03-16T06:30:58.417Z</updated>
    
    <content type="html"><![CDATA[<p>trackIn是一种模型解释的方法，可用于评价每一个样本对模型的贡献度，通常可用于找出训练样本中，标注错误的样本。</p><p>本篇post以Bert QA问题为切入，研究一下这个问题。</p><a id="more"></a><h3 id="QA问答系统"><a href="#QA问答系统" class="headerlink" title="QA问答系统"></a>QA问答系统</h3><p>问答系统的类型有许多种，目前研究比较多的<strong>抽取式QA</strong>，目前认同度最大的数据集是SQuAD。抽取式QA的pipeline是，给定一篇文章，与这个文章对应着一些问题，抽取式QA从文章中选择出正确的答案，<strong>通常是确定答案的起始以及终止位置</strong>，基本框架如下：</p><p><img src="/images/nlp/image-20200311010615222.png" alt="image-20200311010615222" style="zoom:50%;"></p><p>即【问题，文章】-&gt; 【抽取式QA】 -&gt;【答案的收尾位置】</p><p>Embedder：对词进行embedding</p><p>Encoder：分别对问题和文章用LSTM进行建模。</p><p>Interaction Layer：各种Attention机制花式结合问题和文章，对问题和文章进行交互，在原文上得到query-aware的文章表示。（差别主要在这一部分）</p><p>Answer Layer：用query-aware的文章表示来预测答案，一般是用两个网络分别预测答案起止位置，或者直接对文章进行答案标注。</p><p>一些比较有名的模型：<strong>Match-LSTM</strong>，<strong>BiDAF</strong>，<strong>FastQAExt</strong> ，<strong>R-NET</strong> 。</p><p>本文从huggingface提供的bert-Squad pretrain model入手，可选择的模型有：BERT/RoBERTa/XLNet/XLM </p><h3 id="SQuAD"><a href="#SQuAD" class="headerlink" title="SQuAD"></a>SQuAD</h3><p><img src="/images/nlp/image-20200311010632954.png" alt="image-20200311010632954" style="zoom:50%;"></p><p>（图片引用：<a href="https://www.cnblogs.com/xuehuiping/p/12262700.html）" target="_blank" rel="noopener">https://www.cnblogs.com/xuehuiping/p/12262700.html）</a></p><p><strong>SQuAD的指标</strong></p><p><strong>EM：</strong>exact match，即预测结果完全匹配占所有结果的百分比</p><p><strong>F1：</strong> F1的选取是question预测结果与所有GT的最大F1，最终的F1为所有question的平均。<br>$$<br>F_1 = 2 <em> \frac{precision</em>recall}{precision + recall}<br>$$</p><h3 id="transformer"><a href="#transformer" class="headerlink" title="transformer"></a>transformer</h3><p>transformer结构如下所示，是一个由encoder和decoder组成的模块，其中encoder和decoder的数量为Nx个。</p><p><img src="/images/nlp/image-20200311155847088.png" alt="image-20200311155847088" style="zoom:50%;"></p><p>一个transformer有6个encoder，decoder组成，如下：</p><p><img src="/images/nlp/image-20200311160905424.png" alt="image-20200311160905424" style="zoom:50%;"></p><h3 id="NLP回归模型"><a href="#NLP回归模型" class="headerlink" title="NLP回归模型"></a>NLP回归模型</h3><p>经典的NLP问题通常为<strong>自回归语言模型</strong>：单方向预测，只能根据上文预测下文，或下文预测上文。经典的网络有GPT，ELMO。另一种为<strong>自编码语言模型：</strong>通过在输入的X中随机mask掉一些词，通过上下文的单词来预测这些被mask掉的词。这也有一个缺点，就是在输入侧引入了【mask】，导致预训练阶段和fintune阶段不一致的问题，这种类型的网络有Bert以及Bert类似的网络。</p><h3 id="Bert"><a href="#Bert" class="headerlink" title="Bert"></a>Bert</h3><p><img src="/images/nlp/image-20200311165643576.png" alt="image-20200311165643576" style="zoom:80%;"></p><p>bert结构如上，采用的是MASK双向的语言模型，规则是随机选择15%的词，在这15%的词中间，只有80%真正被替换成[mask]标记，10%被随机替换成另外一个单词，10%不做改动。</p><p><strong>Bert的缺点：</strong>它在预训练中使用了<code>[MASK]</code>，但是这种人为的符号在finetune的时候在实际数据中时没有的，导致了预训练 — finetune的不一致。<code>[MASK]</code>的另一个缺点是它假设所预测的(mask掉的)token是相互独立的，给出的是未掩码的tokens。</p><h3 id="XLNet"><a href="#XLNet" class="headerlink" title="XLNet"></a>XLNet</h3><p>XLNet基于以上两点，目前是使用自回归语言模型从左到右的方法，并且在引入MASK还要上下文的语义，学习双向的上下文信息。</p><p>在预训练阶段，引入Permutation Language Model的训练目标，直接的想法就是对句子进行排列组合，然后选择部分的组合输入到模型中，这样任意位置上的词就能看到它的上下文了。</p><p><img src="/images/nlp/image-20200311121638110.png" alt="image-20200311121638110" style="zoom:50%;"></p><p>直观上来说，，他的做法是当前预测到T位置，从句子中随机选择T-1个数，放到T的前面，作为预测T位置元素来使用，其他词通过掩码隐藏掉。</p><p><strong>双流自注意力机制：</strong>1）内容流自注意力，其实就是标准的Transformer的计算过程；2）Query流自注意力，例如预测x3的值，query流直接忽略掉x3输入了，只保留这个位置信息，用参数w来代表位置的embedding编码。</p><p><img src="/images/nlp/image-20200311201431222.png" alt="image-20200311201431222" style="zoom:50%;"></p><p>attention mask的含义如上右边，输入还是1，2，3，4，mask表中，每一列存在的值表示能看到的位置，其中内容流能看到自身信息，但是查询流看不到自身的信息。</p><h3 id="UNILM"><a href="#UNILM" class="headerlink" title="UNILM"></a>UNILM</h3><p>由于mask的训练方式对生成式的任务效果不好，对理解式的任务有着较好的性能，因此UNILM希望从训练方式上做创新，得到一个能够处理生成任务和理解任务的模型。</p><p>UNILM的预训练基于三个目标：单向LM（左到右和右到左），双向LM，sequence2sequence LM。</p><p>该模型采用一个共享参数的Transformer网络的同时还使用了特定的self-attention masks用以控制预测时候所用到的上下文信息。模型结构如下:</p><p><img src="/images/nlp/image-20200311214538762.png" alt="image-20200311214538762" style="zoom:50%;"></p><p>作者通过自动self-attention masks掩码的方式，来选择输入token的上下文，然后在训练阶段，每个batch训练的时间分别为1/3。</p><h3 id="RoBERTa"><a href="#RoBERTa" class="headerlink" title="RoBERTa"></a>RoBERTa</h3><p>1）动态Masking，相比于静态，动态Masking是每次输入到序列的Masking都不一样；</p><p>2）移除next predict loss，相比于BERT，采用了连续的full-sentences和doc-sentences作为输入（长度最多为512）；</p><p>3）更大batch size，batch size更大，training step减少，实验效果相当或者更好些；</p><p>4）text encoding，基于bytes的编码可以有效防止unknown问题。另外，预训练数据集从16G增加到了160G，训练轮数比BERT有所增加。</p><h3 id="GLUE"><a href="#GLUE" class="headerlink" title="GLUE"></a>GLUE</h3><p>通常来说，NLP可以分为自然语言理解（NLU）和自然语言生成（NLG）。在NLU方面，我们拿时下最流行的<a href="https://gluebenchmark.com/tasks" target="_blank" rel="noopener">GLUE</a>(General Language Understanding Evaluation)排行榜举例，其上集合了九项NLU的任务，分别是</p><ul><li><a href="https://nyu-mll.github.io/CoLA/" target="_blank" rel="noopener">CoLA</a>(The Corpus of Linguistic Acceptability):纽约大学发布的有关语法的数据集，该任务主要是对一个给定句子，判定其是否语法正确，因此CoLA属于单个句子的文本二分类任务；</li><li><a href="https://nlp.stanford.edu/sentiment/index.html" target="_blank" rel="noopener">SST</a>(The Stanford Sentiment Treebank)，是斯坦福大学发布的一个情感分析数据集，主要针对电影评论来做情感分类，因此SST属于单个句子的文本分类任务（其中SST-2是二分类，SST-5是五分类，SST-5的情感极性区分的更细致）；</li><li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=52398" target="_blank" rel="noopener">MRPC</a>(Microsoft Research Paraphrase Corpus)，由微软发布，判断两个给定句子，是否具有相同的语义，属于句子对的文本二分类任务；</li><li><a href="http://ixa2.si.ehu.es/stswiki/index.php/STSbenchmark" target="_blank" rel="noopener">STS-B</a>(Semantic Textual Similarity Benchmark)，主要是来自于历年<a href="https://en.wikipedia.org/wiki/SemEval" target="_blank" rel="noopener">SemEval</a>中的一个任务（同时该数据集也包含在了<a href="https://github.com/facebookresearch/SentEval" target="_blank" rel="noopener">SentEval</a>），具体来说是用1到5的分数来表征两个句子的语义相似性，本质上是一个回归问题，但依然可以用分类的方法做，因此可以归类为句子对的文本五分类任务；</li><li><a href="https://data.quora.com/First-Quora-Dataset-Release-Question-Pairs" target="_blank" rel="noopener">QQP</a>(Quora Question Pairs)，是由Quora发布的两个句子是否语义一致的数据集，属于句子对的文本二分类任务；</li><li><a href="http://www.nyu.edu/projects/bowman/multinli/" target="_blank" rel="noopener">MNLI</a>(Multi-Genre Natural Language Inference)，同样由纽约大学发布，是一个文本蕴含的任务，在给定前提（Premise）下，需要判断假设（Hypothesis）是否成立，其中因为MNLI主打卖点是集合了许多不同领域风格的文本，因此又分为matched和mismatched两个版本的MNLI数据集，前者指训练集和测试集的数据来源一致，而后者指来源不一致。该任务属于句子对的文本三分类问题。</li><li><a href="https://arxiv.org/abs/1606.05250" target="_blank" rel="noopener">QNLI</a>（Question Natural Language Inference)，其前身是SQuAD 1.0数据集，给定一个问句，需要判断给定文本中是否包含该问句的正确答案。属于句子对的文本二分类任务；</li><li><a href="https://aclweb.org/aclwiki/Recognizing_Textual_Entailment" target="_blank" rel="noopener">RTE</a>(Recognizing Textual Entailment)，和MNLI类似，也是一个文本蕴含任务，不同的是MNLI是三分类，RTE只需要判断两个句子是否能够推断或对齐，属于句子对的文本二分类任务；</li><li><a href="https://cs.nyu.edu/faculty/davise/papers/WinogradSchemas/WS.html" target="_blank" rel="noopener">WNLI</a>(Winograd Natural Language Inference)，也是一个文本蕴含任务，不过似乎GLUE上这个数据集还有些问题；</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;trackIn是一种模型解释的方法，可用于评价每一个样本对模型的贡献度，通常可用于找出训练样本中，标注错误的样本。&lt;/p&gt;
&lt;p&gt;本篇post以Bert QA问题为切入，研究一下这个问题。&lt;/p&gt;
    
    </summary>
    
      <category term="NLP" scheme="https://wenhui-zhou.github.io/categories/NLP/"/>
    
    
  </entry>
  
</feed>
