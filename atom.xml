<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WenHuiZhou</title>
  
  <subtitle>perper（打起精神！）</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wenhui-zhou.github.io/"/>
  <updated>2020-03-14T16:42:48.396Z</updated>
  <id>https://wenhui-zhou.github.io/</id>
  
  <author>
    <name>WenHuiZhou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LR 推导</title>
    <link href="https://wenhui-zhou.github.io/2020/03/14/LR-%E6%8E%A8%E5%AF%BC/"/>
    <id>https://wenhui-zhou.github.io/2020/03/14/LR-推导/</id>
    <published>2020-03-14T15:57:51.000Z</published>
    <updated>2020-03-14T16:42:48.396Z</updated>
    
    <content type="html"><![CDATA[<p>逻辑斯蒂回归是一种二分类模型，使用sigmoid函数判别函数，下面将详细讲一下逻辑回归的原理。</p><a id="more"></a><h3 id="逻辑回归函数"><a href="#逻辑回归函数" class="headerlink" title="逻辑回归函数"></a>逻辑回归函数</h3><ul><li>逻辑回归需要满足伯努利二次分布，即$h(\theta)$ 为正样本的概率，那么$1-h(\theta)$ 为负样本的概率。</li><li>样本分布相互独立，即求所有样本出现的概率可以通过连乘的形式得到。</li></ul><p><strong>sigmoid函数</strong><br>$$<br>h(\theta) = \frac{e^{wx}}{1+e^{wx}}<br>$$<br><strong>逻辑回归的损失函数：</strong></p><p>在一个二分类的数据中，一个事件发生的概率为：<br>$$<br>P(y | \boldsymbol{x})=\left{\begin{aligned} p, y &amp;=1 \ 1-p, y &amp;=0 \end{aligned}\right.<br>$$<br>为了方便计算将上式写成：<br>$$<br>P\left(y_{i} | \boldsymbol{x}_{i}\right)=p^{y_{i}}(1-p)^{1-y_{i}}<br>$$<br>当我们采集到一组数据，由于数据分布是相互独立的，因此联合的概率可以写成：<br>$$<br>\begin{aligned} P_{\breve{E}} &amp;=P\left(y_{1} | \boldsymbol{x}_{1}\right) P\left(y_{2} | \boldsymbol{x}_{2}\right) P\left(y_{3} | \boldsymbol{x}_{3}\right) \dots P\left(y_{N} | \boldsymbol{x}_{N}\right) \ &amp;=\prod_{n=1}^{N} p^{y_{n}}(1-p)^{1-y_{n}} \end{aligned}<br>$$<br>为了简化上面的式子，而不失去函数单调性，我们对函数取对数，得到：<br>$$<br>\begin{aligned} F(\boldsymbol{w})=\ln \left(P_{\breve{\mathbf{E}} \mathbf{h}}\right) &amp;=\ln \left(\prod_{n=1}^{N} p^{y_{n}}(1-p)^{1-y_{n}}\right) \ &amp;=\sum_{n=1}^{N} \ln \left(p^{y_{n}}(1-p)^{1-y_{n}}\right) \ &amp;=\sum_{n=1}^{N}\left(y_{n} \ln (p)+\left(1-y_{n}\right) \ln (1-p)\right) \end{aligned}<br>$$<br>其中p为sigmoid函数，可以发现上面实质加上负号就变成了交叉熵。</p><p><strong>逻辑回归函数的求导</strong></p><p>对于sigmoid函数，我们的求导如下：<br>$$<br>\begin{aligned} p^{\prime}=f^{\prime}(\boldsymbol{w}) &amp;=\left(\frac{1}{1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}}\right)^{\prime} \ &amp;=-\frac{1}{\left(1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}\right)^{2}} \cdot\left(1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}\right)^{\prime} \ &amp;=-\frac{1}{\left(1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}\right)^{2}} \cdot e^{-\boldsymbol{w}^{T} \boldsymbol{x}} \cdot\left(-\boldsymbol{w}^{T} \boldsymbol{x}\right)^{\prime} \ &amp;=-\frac{1}{\left(1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}\right)^{2}} \cdot e^{-\boldsymbol{w}^{T} \boldsymbol{x}} \cdot(-\boldsymbol{x}) \ &amp;=\frac{e^{-\boldsymbol{w}^{T} \boldsymbol{x}}}{\left(1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}\right)^{2}} \cdot \boldsymbol{x} \ &amp;=\frac{1}{1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}} \cdot \frac{e^{-\boldsymbol{w}^{T} \boldsymbol{x}}}{1+e^{-\boldsymbol{w}^{T} \boldsymbol{x}}} \cdot \boldsymbol{x} \ &amp;=p(1-p) \boldsymbol{x} \end{aligned}<br>$$<br>接下来对逻辑回归函数进行求导(求函数的最大似然)：<br>$$<br>\begin{aligned} \nabla F(\boldsymbol{w}) &amp;=\nabla\left(\sum_{n=1}^{N}\left(y_{n} \ln (p)+\left(1-y_{n}\right) \ln (1-p)\right)\right) \ &amp;=\sum\left(y_{n} \ln ^{\prime}(p)+\left(1-y_{n}\right) \ln ^{\prime}(1-p)\right) \ &amp;=\sum\left(\left(y_{n} \frac{1}{p} p^{\prime}\right)+\left(1-y_{n}\right) \frac{1}{1-p}(1-p)^{\prime}\right) \ &amp;=\sum_{n=1}\left(y_{n}(1-p) \boldsymbol{x}_{n}-\left(1-y_{n}\right) p \boldsymbol{x}_{n}\right) \ &amp;=\sum_{n=1}^{N}\left(y_{n}-p\right) \boldsymbol{x}_{n} \end{aligned}<br>$$<br><strong>SGD</strong></p><p>对参数进行更新，得到：<br>$$<br>\boldsymbol{w}_{t+1}=\boldsymbol{w}_{t}+\eta \nabla F(\boldsymbol{w})<br>$$</p><p>$$<br>\boldsymbol{w}_{t+1}= \boldsymbol{w}_{t} + \eta \sum_{n=1}^{N}\left(y_{n}-p\right) \boldsymbol{x}_{n}<br>$$</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;逻辑斯蒂回归是一种二分类模型，使用sigmoid函数判别函数，下面将详细讲一下逻辑回归的原理。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="https://wenhui-zhou.github.io/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>TrackIn:BERT five-classification on MSMARCO.md</title>
    <link href="https://wenhui-zhou.github.io/2020/03/12/TrackIn-BERT/"/>
    <id>https://wenhui-zhou.github.io/2020/03/12/TrackIn-BERT/</id>
    <published>2020-03-12T12:54:09.000Z</published>
    <updated>2020-03-13T18:37:20.664Z</updated>
    
    <content type="html"><![CDATA[<p>这篇post主要构建一个BERT的五分类模型，然后研究使用TrackIn来确定样本在模型训练中，对模型inference的影响。</p><a id="more"></a><h3 id="MS-MARCO"><a href="#MS-MARCO" class="headerlink" title="MS MARCO"></a>MS MARCO</h3><p>MS MARCO是微软发布的一个NLP问答数据集，里头含有100000个真实的在bing上提出的问题，以及问题的答案，可作为QnA问题的数据集，此后还陆续提出了多种问题的数据集。</p><p>格式的介绍在这里：<a href="https://microsoft.github.io/MSMARCO-Passage-Ranking/" target="_blank" rel="noopener">https://microsoft.github.io/MSMARCO-Passage-Ranking/</a></p><p>MARCO数据集中，比较重要的文件有：</p><ul><li><p><strong>triples.train.small.tsv</strong>，他的文件格式为:&lt;query,doc1,doc2&gt;，第一个doc1是positive，第二个doc2是negative。</p></li><li><p><strong>top1000.dev.tsv：</strong>&lt;query_id ,doc_id,query,doc&gt;，即query和doc对</p></li><li><strong>qrels.dev.small.tsv</strong>：&lt;query_id,0,doc_id,1&gt;，用来判断query和doc是否是相互关联的。</li></ul><p>triples.train.small.tsv中query是重复的。</p><h3 id="dataloader部分"><a href="#dataloader部分" class="headerlink" title="dataloader部分"></a>dataloader部分</h3><p>使用一个数据存储数据，格式为&lt;query,doc,label&gt;,然后将数组存储为dataloader。其中label = 0 表示负类，label = 1 表示你正类。</p><p>其具体的实现过程如下：</p><p>首先将数据query与doc分别经过tokenizer分词化，然后组成一个输入:</p><p>[CLS] + tokens_query + [SEP] + tokens_doc + [SEP]</p><p>随后将分词转换为vocab中的word id，构建一个segments_tensor，长度与输入长度相同，其中query部分为0，doc部分为1。如果我们希望返回一个batch，需要将所有的tensor通过前面填充0 的方式，将tensor维度变成一直（pad_sequence）,同时构建一个mask，mask的维度与batch的维度相同，其中用零填充的部分为0，不是0填充的部分为1。</p><p>最终dataloader将返回：</p><p>&lt;tokens_tensors,segments_tensors,masks_tensors,labels_ids&gt;</p><h3 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h3><p>模型使用<code>transformers.BertForSequenceClassification</code></p><p>该模型的网络结构如下：</p><p><img src="/Users/zhouwenhui/blog/source/images/nlp/image-20200314021335605.png" alt="image-20200314021335605" style="zoom:50%;"></p><p>即BERT的基础上加上一层全连接层，全链接层的输出为label class的个数，最后通过一个交叉熵得出最后的loss。</p><h3 id="打算怎么做trackIn"><a href="#打算怎么做trackIn" class="headerlink" title="打算怎么做trackIn"></a>打算怎么做trackIn</h3><p>先把代码跑出来再说。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇post主要构建一个BERT的五分类模型，然后研究使用TrackIn来确定样本在模型训练中，对模型inference的影响。&lt;/p&gt;
    
    </summary>
    
      <category term="NLP" scheme="https://wenhui-zhou.github.io/categories/NLP/"/>
    
    
  </entry>
  
  <entry>
    <title>Bert，XLNet，UNILM，RoBERTa以及QA</title>
    <link href="https://wenhui-zhou.github.io/2020/03/10/Bert%EF%BC%8CXLNet%EF%BC%8CUNILM%EF%BC%8CRoBERTa%E4%BB%A5%E5%8F%8AQA/"/>
    <id>https://wenhui-zhou.github.io/2020/03/10/Bert，XLNet，UNILM，RoBERTa以及QA/</id>
    <published>2020-03-10T15:04:42.000Z</published>
    <updated>2020-03-12T12:51:11.971Z</updated>
    
    <content type="html"><![CDATA[<p>trackIn是一种模型解释的方法，可用于评价每一个样本对模型的贡献度，通常可用于找出训练样本中，标注错误的样本。</p><p>本篇post以Bert QA问题为切入，研究一下这个问题。</p><a id="more"></a><h3 id="QA问答系统"><a href="#QA问答系统" class="headerlink" title="QA问答系统"></a>QA问答系统</h3><p>问答系统的类型有许多种，目前研究比较多的<strong>抽取式QA</strong>，目前认同度最大的数据集是SQuAD。抽取式QA的pipeline是，给定一篇文章，与这个文章对应着一些问题，抽取式QA从文章中选择出正确的答案，<strong>通常是确定答案的起始以及终止位置</strong>，基本框架如下：</p><p><img src="/images/nlp/image-20200311010615222.png" alt="image-20200311010615222" style="zoom:50%;"></p><p>即【问题，文章】-&gt; 【抽取式QA】 -&gt;【答案的收尾位置】</p><p>Embedder：对词进行embedding</p><p>Encoder：分别对问题和文章用LSTM进行建模。</p><p>Interaction Layer：各种Attention机制花式结合问题和文章，对问题和文章进行交互，在原文上得到query-aware的文章表示。（差别主要在这一部分）</p><p>Answer Layer：用query-aware的文章表示来预测答案，一般是用两个网络分别预测答案起止位置，或者直接对文章进行答案标注。</p><p>一些比较有名的模型：<strong>Match-LSTM</strong>，<strong>BiDAF</strong>，<strong>FastQAExt</strong> ，<strong>R-NET</strong> 。</p><p>本文从huggingface提供的bert-Squad pretrain model入手，可选择的模型有：BERT/RoBERTa/XLNet/XLM </p><h3 id="SQuAD"><a href="#SQuAD" class="headerlink" title="SQuAD"></a>SQuAD</h3><p><img src="/images/nlp/image-20200311010632954.png" alt="image-20200311010632954" style="zoom:50%;"></p><p>（图片引用：<a href="https://www.cnblogs.com/xuehuiping/p/12262700.html）" target="_blank" rel="noopener">https://www.cnblogs.com/xuehuiping/p/12262700.html）</a></p><p><strong>SQuAD的指标</strong></p><p><strong>EM：</strong>exact match，即预测结果完全匹配占所有结果的百分比</p><p><strong>F1：</strong> F1的选取是question预测结果与所有GT的最大F1，最终的F1为所有question的平均。<br>$$<br>F_1 = 2 <em> \frac{precision</em>recall}{precision + recall}<br>$$</p><h3 id="transformer"><a href="#transformer" class="headerlink" title="transformer"></a>transformer</h3><p>transformer结构如下所示，是一个由encoder和decoder组成的模块，其中encoder和decoder的数量为Nx个。</p><p><img src="/images/nlp/image-20200311155847088.png" alt="image-20200311155847088" style="zoom:50%;"></p><p>一个transformer有6个encoder，decoder组成，如下：</p><p><img src="/images/nlp/image-20200311160905424.png" alt="image-20200311160905424" style="zoom:50%;"></p><h3 id="NLP回归模型"><a href="#NLP回归模型" class="headerlink" title="NLP回归模型"></a>NLP回归模型</h3><p>经典的NLP问题通常为<strong>自回归语言模型</strong>：单方向预测，只能根据上文预测下文，或下文预测上文。经典的网络有GPT，ELMO。另一种为<strong>自编码语言模型：</strong>通过在输入的X中随机mask掉一些词，通过上下文的单词来预测这些被mask掉的词。这也有一个缺点，就是在输入侧引入了【mask】，导致预训练阶段和fintune阶段不一致的问题，这种类型的网络有Bert以及Bert类似的网络。</p><h3 id="Bert"><a href="#Bert" class="headerlink" title="Bert"></a>Bert</h3><p><img src="/images/nlp/image-20200311165643576.png" alt="image-20200311165643576" style="zoom:80%;"></p><p>bert结构如上，采用的是MASK双向的语言模型，规则是随机选择15%的词，在这15%的词中间，只有80%真正被替换成[mask]标记，10%被随机替换成另外一个单词，10%不做改动。</p><p><strong>Bert的缺点：</strong>它在预训练中使用了<code>[MASK]</code>，但是这种人为的符号在finetune的时候在实际数据中时没有的，导致了预训练 — finetune的不一致。<code>[MASK]</code>的另一个缺点是它假设所预测的(mask掉的)token是相互独立的，给出的是未掩码的tokens。</p><h3 id="XLNet"><a href="#XLNet" class="headerlink" title="XLNet"></a>XLNet</h3><p>XLNet基于以上两点，目前是使用自回归语言模型从左到右的方法，并且在引入MASK还要上下文的语义，学习双向的上下文信息。</p><p>在预训练阶段，引入Permutation Language Model的训练目标，直接的想法就是对句子进行排列组合，然后选择部分的组合输入到模型中，这样任意位置上的词就能看到它的上下文了。</p><p><img src="/images/nlp/image-20200311121638110.png" alt="image-20200311121638110" style="zoom:50%;"></p><p>直观上来说，，他的做法是当前预测到T位置，从句子中随机选择T-1个数，放到T的前面，作为预测T位置元素来使用，其他词通过掩码隐藏掉。</p><p><strong>双流自注意力机制：</strong>1）内容流自注意力，其实就是标准的Transformer的计算过程；2）Query流自注意力，例如预测x3的值，query流直接忽略掉x3输入了，只保留这个位置信息，用参数w来代表位置的embedding编码。</p><p><img src="/images/nlp/image-20200311201431222.png" alt="image-20200311201431222" style="zoom:50%;"></p><p>attention mask的含义如上右边，输入还是1，2，3，4，mask表中，每一列存在的值表示能看到的位置，其中内容流能看到自身信息，但是查询流看不到自身的信息。</p><h3 id="UNILM"><a href="#UNILM" class="headerlink" title="UNILM"></a>UNILM</h3><p>由于mask的训练方式对生成式的任务效果不好，对理解式的任务有着较好的性能，因此UNILM希望从训练方式上做创新，得到一个能够处理生成任务和理解任务的模型。</p><p>UNILM的预训练基于三个目标：单向LM（左到右和右到左），双向LM，sequence2sequence LM。</p><p>该模型采用一个共享参数的Transformer网络的同时还使用了特定的self-attention masks用以控制预测时候所用到的上下文信息。模型结构如下:</p><p><img src="/images/nlp/image-20200311214538762.png" alt="image-20200311214538762" style="zoom:50%;"></p><p>作者通过自动self-attention masks掩码的方式，来选择输入token的上下文，然后在训练阶段，每个batch训练的时间分别为1/3。</p><h3 id="RoBERTa"><a href="#RoBERTa" class="headerlink" title="RoBERTa"></a>RoBERTa</h3><p>1）动态Masking，相比于静态，动态Masking是每次输入到序列的Masking都不一样；</p><p>2）移除next predict loss，相比于BERT，采用了连续的full-sentences和doc-sentences作为输入（长度最多为512）；</p><p>3）更大batch size，batch size更大，training step减少，实验效果相当或者更好些；</p><p>4）text encoding，基于bytes的编码可以有效防止unknown问题。另外，预训练数据集从16G增加到了160G，训练轮数比BERT有所增加。</p><h3 id="GLUE"><a href="#GLUE" class="headerlink" title="GLUE"></a>GLUE</h3><p>通常来说，NLP可以分为自然语言理解（NLU）和自然语言生成（NLG）。在NLU方面，我们拿时下最流行的<a href="https://gluebenchmark.com/tasks" target="_blank" rel="noopener">GLUE</a>(General Language Understanding Evaluation)排行榜举例，其上集合了九项NLU的任务，分别是</p><ul><li><a href="https://nyu-mll.github.io/CoLA/" target="_blank" rel="noopener">CoLA</a>(The Corpus of Linguistic Acceptability):纽约大学发布的有关语法的数据集，该任务主要是对一个给定句子，判定其是否语法正确，因此CoLA属于单个句子的文本二分类任务；</li><li><a href="https://nlp.stanford.edu/sentiment/index.html" target="_blank" rel="noopener">SST</a>(The Stanford Sentiment Treebank)，是斯坦福大学发布的一个情感分析数据集，主要针对电影评论来做情感分类，因此SST属于单个句子的文本分类任务（其中SST-2是二分类，SST-5是五分类，SST-5的情感极性区分的更细致）；</li><li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=52398" target="_blank" rel="noopener">MRPC</a>(Microsoft Research Paraphrase Corpus)，由微软发布，判断两个给定句子，是否具有相同的语义，属于句子对的文本二分类任务；</li><li><a href="http://ixa2.si.ehu.es/stswiki/index.php/STSbenchmark" target="_blank" rel="noopener">STS-B</a>(Semantic Textual Similarity Benchmark)，主要是来自于历年<a href="https://en.wikipedia.org/wiki/SemEval" target="_blank" rel="noopener">SemEval</a>中的一个任务（同时该数据集也包含在了<a href="https://github.com/facebookresearch/SentEval" target="_blank" rel="noopener">SentEval</a>），具体来说是用1到5的分数来表征两个句子的语义相似性，本质上是一个回归问题，但依然可以用分类的方法做，因此可以归类为句子对的文本五分类任务；</li><li><a href="https://data.quora.com/First-Quora-Dataset-Release-Question-Pairs" target="_blank" rel="noopener">QQP</a>(Quora Question Pairs)，是由Quora发布的两个句子是否语义一致的数据集，属于句子对的文本二分类任务；</li><li><a href="http://www.nyu.edu/projects/bowman/multinli/" target="_blank" rel="noopener">MNLI</a>(Multi-Genre Natural Language Inference)，同样由纽约大学发布，是一个文本蕴含的任务，在给定前提（Premise）下，需要判断假设（Hypothesis）是否成立，其中因为MNLI主打卖点是集合了许多不同领域风格的文本，因此又分为matched和mismatched两个版本的MNLI数据集，前者指训练集和测试集的数据来源一致，而后者指来源不一致。该任务属于句子对的文本三分类问题。</li><li><a href="https://arxiv.org/abs/1606.05250" target="_blank" rel="noopener">QNLI</a>（Question Natural Language Inference)，其前身是SQuAD 1.0数据集，给定一个问句，需要判断给定文本中是否包含该问句的正确答案。属于句子对的文本二分类任务；</li><li><a href="https://aclweb.org/aclwiki/Recognizing_Textual_Entailment" target="_blank" rel="noopener">RTE</a>(Recognizing Textual Entailment)，和MNLI类似，也是一个文本蕴含任务，不同的是MNLI是三分类，RTE只需要判断两个句子是否能够推断或对齐，属于句子对的文本二分类任务；</li><li><a href="https://cs.nyu.edu/faculty/davise/papers/WinogradSchemas/WS.html" target="_blank" rel="noopener">WNLI</a>(Winograd Natural Language Inference)，也是一个文本蕴含任务，不过似乎GLUE上这个数据集还有些问题；</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;trackIn是一种模型解释的方法，可用于评价每一个样本对模型的贡献度，通常可用于找出训练样本中，标注错误的样本。&lt;/p&gt;
&lt;p&gt;本篇post以Bert QA问题为切入，研究一下这个问题。&lt;/p&gt;
    
    </summary>
    
      <category term="NLP" scheme="https://wenhui-zhou.github.io/categories/NLP/"/>
    
    
  </entry>
  
  <entry>
    <title>天池安全AI挑战赛细枝末节</title>
    <link href="https://wenhui-zhou.github.io/2020/03/10/%E5%A4%A9%E6%B1%A0%E5%AE%89%E5%85%A8AI%E6%8C%91%E6%88%98%E8%B5%9B%E7%BB%86%E6%9E%9D%E6%9C%AB%E8%8A%82/"/>
    <id>https://wenhui-zhou.github.io/2020/03/10/天池安全AI挑战赛细枝末节/</id>
    <published>2020-03-09T18:04:35.000Z</published>
    <updated>2020-03-09T20:11:30.377Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="welcome to my blog,enter password to read." />    <label for="pass">welcome to my blog,enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      welcome to my blog,enter password to read.
    
    </summary>
    
      <category term="面试准备" scheme="https://wenhui-zhou.github.io/categories/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/"/>
    
    
  </entry>
  
  <entry>
    <title>精彩视频剪辑的细枝末节</title>
    <link href="https://wenhui-zhou.github.io/2020/03/08/%E7%B2%BE%E5%BD%A9%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91%E7%9A%84%E7%BB%86%E6%9E%9D%E6%9C%AB%E8%8A%82/"/>
    <id>https://wenhui-zhou.github.io/2020/03/08/精彩视频剪辑的细枝末节/</id>
    <published>2020-03-08T15:44:43.000Z</published>
    <updated>2020-03-09T15:17:34.890Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="welcome to my blog,enter password to read." />    <label for="pass">welcome to my blog,enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      welcome to my blog,enter password to read.
    
    </summary>
    
      <category term="面试准备" scheme="https://wenhui-zhou.github.io/categories/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/"/>
    
    
  </entry>
  
</feed>
